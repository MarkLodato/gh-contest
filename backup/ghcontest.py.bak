#!/usr/bin/python

import itertools

def read_data(filename):
#    u2r = {}
#    r2u = {}
    with open(filename) as f:
        pairs = [map(int, line.rstrip('\n\r').split(':')) for line in f]
#        for line in f:
#            try:
#                u2r[user].append(repo)
#            except KeyError:
#                u2r[user] = [repo]
#            try:
#                r2u[repo].append(user)
#            except KeyError:
#                r2u[repo] = [user]
    num_users = max(x[0] for x in pairs) + 1
    num_repos = max(x[1] for x in pairs) + 1
    u2r = [[] for i in range(num_users)]
    r2u = [[] for i in range(num_repos)]
    for u,r in pairs:
        u2r[u].append(r)
        r2u[r].append(u)
    return u2r, r2u

def read_test(filename):
    with open(filename) as f:
        return [int(x) for x in f]

def count_sum(iterable):
    d = {}
    for k,v in iterable:
        try:
            d[k] += v
        except KeyError:
            d[k] = v
    return d

def count(iterable):
    return count_sum(itertools.izip(iterable, itertools.repeat(1)))

def suggest(user, u2r, r2u, n=None):
    repos = u2r[user]

    other_users = count_sum((u,1) for r in repos for u in r2u[r])
    #other_users = {}
    #for r in repos:
    #    for u in r2u[r]:
    #        if u != user:
    #            try:
    #                other_users[u] += 1
    #            except KeyError:
    #                other_users[u] = 1
    other_users.pop(user, None)

    other_repos = count_sum( (r,v)
            for u,v in other_users.iteritems()
            for r in u2r[u] )

    for r in repos:
        other_repos.pop(r, None)

    results = other_repos.items()
    results.sort(reverse=True, key=lambda x: x[1])

    if n is None:
        return results
    else:
        return [x[0] for x in results[:n]]

def run_suggest(users, u2r, r2u, n=10):
    return dict( (u, suggest(u, u2r, r2u, n)) for u in users )

def save_suggest(filename, results):
    with open(filename, 'w') as f:
        for k,v in results.iteritems():
            f.write('%s:%s\n' % (k, ','.join(v)))
